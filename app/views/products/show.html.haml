.flex.flex-col.justify-center.items-center.h-full.w-full.overflow-auto
  %h1.text-3xl.font-semibold.mt-10
    = "#{@product.name}"
  %h1.text-xl.font-semibold.mb-8
    = "(#{@product.brand} - #{@product.weight}g)"
  .flex.flex-row.justify-between.items-start{ class: "md:w-1/4 sm:w-full mb-8" }
    .flex.flex-col{ class: "w-1/2 px-4" }
      %label.mb-4
        = "Number of servings" 
      %input{type: "number", name: "servings", id: "servings", required: true, class: "rounded-md p-2 w-full border border-slate-700", min: "0", value: "1"}
    .flex.flex-col{ class: "w-1/2 px-4" }
      %label#listbox-label
      = "Serving size"
      .relative.mt-4
        %button#weight-units-list-button.relative.w-full.cursor-default.rounded-md.bg-white.pl-3.pr-10.text-left.text-gray-900.shadow-sm.ring-1.ring-inset.ring-slate-700.focus:outline-none.focus:ring-2.focus:ring-indigo-500.sm:text-sm.sm:leading-6{"aria-expanded" => "true", "aria-haspopup" => "listbox", "aria-labelledby" => "listbox-label", class: "py-2", type: "button"}
          %span.flex.items-center
            = @weight_units[-2]
          %span.pointer-events-none.absolute.inset-y-0.right-0.ml-3.flex.items-center.pr-2
            %svg.h-5.w-5.text-gray-400{"aria-hidden" => "true", fill: "currentColor", viewbox: "0 0 20 20"}
              %path{"clip-rule" => "evenodd", d: "M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z", "fill-rule" => "evenodd"}
        %ul#weight-units.absolute.z-10.mt-1.max-h-56.w-full.overflow-auto.rounded-md.bg-white.py-1.text-base.shadow-lg.ring-1.ring-black.ring-opacity-5.focus:outline-none.sm:text-sm{"aria-activedescendant" => "listbox-option-3", "aria-labelledby" => "listbox-label", role: "listbox", tabindex: "-1", style: "display: none;"}
          - @weight_units.each_with_index do |unit, index|
            %li{ id: "listbox-option-#{index}", class: "text-gray-900 relative cursor-default select-none py-2 pl-3 pr-9", role: "option" }
              .flex.items-center
                %span.font-normal.ml-3.block.truncate= unit

  %table.table-auto.border.border-slate-300{ class: "md:w-1/3 sm:w-full" }
    %tbody
      - @product.attributes.except('_id', 'brand', 'name', 'weight', 'weight_units', 'approved', 'created_at', 'updated_at').each do |attribute, value|
        - humanized_attribute = attribute.humanize.split.map(&:capitalize).join(' ')
        - if attribute == "allergens"
          %tr
            %td{ class: "border border-slate-300 p-2 font-semibold w-1/3"}
              = "Allergens"
            %td{ class: "border border-slate-300 p-2 text-slate-700 w-2/3"}
              - value.each do |allergen_id|
                - allergen = Allergen.find(allergen_id)
                = allergen.name
              %br/
        - elsif attribute == "submitted_by"
          %tr
            %td{ class: "border border-slate-300 p-2 font-semibold"}
              = "Submitted by"
            %td{ class: "border border-slate-300 p-2 text-slate-700"}
              - user = User.find(value)
              = user.name
              %br/
        - else
          %tr
            %td{ class: "border border-slate-300 p-2 font-semibold"}= humanized_attribute
            %td{ class: "border border-slate-300 p-2 text-slate-700"}= value.present? ? value : "0"
  .flex.flex-col.justify-start.items-start{ class: "md:w-1/3 sm:w-full h-full mt-10" }
    %h1.text-2xl.font-semibold.mb-4
      = "Reviews"
    .flex.flex-col.items-start.shadow-xl.rounded-md.p-4.border-2.w-full{ class: "h-[20rem] mb-20" }
      %label.mb-2
        = "Write a review for #{@product.name}"
      %textarea{ class: "w-full h-2/3 mb-2" }
      .flex.flex-row.items-center.justify-between.w-full.mt-4
        %label
          = "Do you recommend this product?"
        %button{type: "submit", class: "bg-primary-500 text-white rounded-md p-2 px-4"}
          = "Submit"


:javascript
  document.addEventListener("DOMContentLoaded", function() {
      var listItems = document.querySelectorAll('#weight-units li');
      var button = document.querySelector("#weight-units-list-button > span")
      var weightUnitsList = document.getElementById('weight-units');

      function updateServingSize(element) {
          var buttonText = element.innerText.trim();
          button.innerText = buttonText;
          weightUnitsList.style.display = 'none';
      }

      button.addEventListener('click', function() {
          if (weightUnitsList.style.display === 'none' || weightUnitsList.style.display === '') {
              weightUnitsList.style.display = 'block';
          } else {
              weightUnitsList.style.display = 'none';
          }
      });

      listItems.forEach(function(item) {
          item.addEventListener('click', function() {
              updateServingSize(this);
          });
      });

      document.body.addEventListener('click', function(event) {
          if (!event.target.closest('#weight-units-list-button') && !event.target.closest('#weight-units')) {
              weightUnitsList.style.display = 'none';
          }
      });
  });
